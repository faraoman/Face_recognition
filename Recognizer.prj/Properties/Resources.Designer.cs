//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Recognizer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Recognizer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;opencv_storage&gt;
        ///&lt;haarcascade_eye type_id=&quot;opencv-haar-classifier&quot;&gt;
        ///  &lt;size&gt;
        ///    20 20&lt;/size&gt;
        ///  &lt;stages&gt;
        ///    &lt;_&gt;
        ///      &lt;!-- stage 0 --&gt;
        ///      &lt;trees&gt;
        ///        &lt;_&gt;
        ///          &lt;!-- tree 0 --&gt;
        ///          &lt;_&gt;
        ///            &lt;!-- root node --&gt;
        ///            &lt;feature&gt;
        ///              &lt;rects&gt;
        ///                &lt;_&gt;
        ///                  0 8 20 12 -1.&lt;/_&gt;
        ///                &lt;_&gt;
        ///                  0 14 20 6 2.&lt;/_&gt;&lt;/rects&gt;
        ///              &lt;tilted&gt;0&lt;/tilted&gt;&lt;/feature&gt;
        ///            &lt;threshold&gt;0.129639 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string haarcascade_eye {
            get {
                return ResourceManager.GetString("haarcascade_eye", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!--
        ///    Stump-based 20x20 gentle adaboost frontal face detector.
        ///    Created by Rainer Lienhart.
        ///
        ///////////////////////////////////////////////////////////////////////////////////////////
        ///
        ///  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
        ///
        ///  By downloading, copying, installing or using the software you agree to this license.
        ///  If you do not agree to this license, do not download, install,
        ///  copy or use the software.
        ///
        ///
        ///                        Intel Licens [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string haarcascade_frontalface_alt {
            get {
                return ResourceManager.GetString("haarcascade_frontalface_alt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!--
        ///    Stump-based 24x24 discrete(?) adaboost frontal face detector.
        ///    Created by Rainer Lienhart.
        ///
        ///////////////////////////////////////////////////////////////////////////////////////////
        ///
        ///  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
        ///
        ///  By downloading, copying, installing or using the software you agree to this license.
        ///  If you do not agree to this license, do not download, install,
        ///  copy or use the software.
        ///
        ///
        ///                        Intel L [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string haarcascade_frontalface_default {
            get {
                return ResourceManager.GetString("haarcascade_frontalface_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;opencv_storage&gt;
        ///&lt;radius&gt;1&lt;/radius&gt;
        ///&lt;neighbors&gt;8&lt;/neighbors&gt;
        ///&lt;grid_x&gt;8&lt;/grid_x&gt;
        ///&lt;grid_y&gt;8&lt;/grid_y&gt;
        ///&lt;histograms&gt;
        ///  &lt;_ type_id=&quot;opencv-matrix&quot;&gt;
        ///    &lt;rows&gt;1&lt;/rows&gt;
        ///    &lt;cols&gt;16384&lt;/cols&gt;
        ///    &lt;dt&gt;f&lt;/dt&gt;
        ///    &lt;data&gt;
        ///      1.16873635e-002 1.16873635e-002 0. 1.46092044e-003 8.76552239e-003
        ///      7.30460219e-004 5.11322170e-003 2.11833455e-002 1.46092044e-003 0.
        ///      0. 0. 2.92184087e-003 7.30460219e-004 5.84368175e-003
        ///      1.97224263e-002 1.38787441e-002 5.11322170e-003 0. 0. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LBPFaces {
            get {
                return ResourceManager.GetString("LBPFaces", resourceCulture);
            }
        }
    }
}
